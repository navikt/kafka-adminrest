########## Building group hierarchy down to relevant nodes

dn: dc=test,dc=local
objectClass: Domain
dc: test

##### Add the ServiceAccounts node, as well as ApplAccounts for Basta srv users

dn: ou=ServiceAccounts,dc=test,dc=local
objectClass: organizationalUnit
ou: ServiceAccounts

# Add service user for handling LDAP group management

dn: uid=igroup,ou=ServiceAccounts,dc=test,dc=local
objectClass: inetOrgPerson
objectClass: person
objectClass: organizationalPerson
uid: igroup
cn: igroup
sn: IntegrationTestGroup
userPassword: itest

# Add a few service users for producing and consuming

dn: uid=srvp01,ou=ServiceAccounts,dc=test,dc=local
objectClass: inetOrgPerson
objectClass: person
objectClass: organizationalPerson
cn: srvp01
uid: srvp01
sn: P01
userPassword: dummy

dn: uid=srvc01,ou=ServiceAccounts,dc=test,dc=local
objectClass: inetOrgPerson
objectClass: person
objectClass: organizationalPerson
cn: srvc01
uid: srvc01
sn: C01
userPassword: dummy

dn: ou=ApplAccounts,ou=ServiceAccounts,dc=test,dc=local
objectClass: organizationalUnit
ou: ApplAccounts

dn: uid=srvp02,ou=ApplAccounts,ou=ServiceAccounts,dc=test,dc=local
objectClass: inetOrgPerson
objectClass: person
objectClass: organizationalPerson
cn: srvp02
uid: srvp02
sn: P02
userPassword: dummy

dn: uid=srvc02,ou=ApplAccounts,ou=ServiceAccounts,dc=test,dc=local
objectClass: inetOrgPerson
objectClass: person
objectClass: organizationalPerson
cn: srvc02
uid: srvc02
sn: C02
userPassword: dummy

##### Continue with hierarchy

dn: ou=BusinessUnits,dc=test,dc=local
objectClass: organizationalUnit
ou: BusinessUnits

dn: ou=NAV,ou=BusinessUnits,dc=test,dc=local
objectClass: organizationalUnit
ou: NAV

##### Add the Users node

dn: ou=Users,ou=NAV,ou=BusinessUnits,dc=test,dc=local
objectClass: organizationalUnit
ou: Users

# Add some users for authentication test

dn: uid=n000001,ou=Users,ou=NAV,ou=BusinessUnits,dc=test,dc=local
objectClass: inetOrgPerson
objectClass: person
objectClass: organizationalPerson
cn: n000001
uid: n000001
sn: IntegrationTestAuth1
userPassword: itest1

dn: uid=n000002,ou=Users,ou=NAV,ou=BusinessUnits,dc=test,dc=local
objectClass: inetOrgPerson
objectClass: person
objectClass: organizationalPerson
cn: n000002
uid: n000002
sn: IntegrationTestAuth2
userPassword: itest2

dn: uid=n145821,ou=Users,ou=NAV,ou=BusinessUnits,dc=test,dc=local
objectClass: inetOrgPerson
objectClass: person
objectClass: organizationalPerson
cn: n145821
uid: n145821
sn: IntegrationTestAuth3
userPassword: itest3

##### Continue downwards to the group part

dn: ou=Groups,ou=NAV,ou=BusinessUnits,dc=test,dc=local
objectClass: organizationalUnit
ou: Groups

dn: OU=AccountGroupNotInRemedy,OU=Groups,OU=NAV,OU=BusinessUnits,DC=test,DC=local
objectClass: organizationalUnit
ou: AccountGroupNotInRemedy

# Finally
dn: OU=kafka,OU=AccountGroupNotInRemedy,OU=Groups,OU=NAV,OU=BusinessUnits,DC=test,DC=local
objectClass: organizationalUnit
ou: kafka

##### Building some kafka producer (KP-) and consumer (KC-) groups, each topic has 3 groups (producer, consumer, manager)

dn: cn=KC-tpc-01,OU=kafka,OU=AccountGroupNotInRemedy,OU=Groups,OU=NAV,OU=BusinessUnits,DC=test,DC=local
objectClass: group
cn: KC-tpc-01
sAMAccountName: KC-tpc-01
description: Generated by kafka-admin-rest, see https://github.com/navikt/kafka-adminrest

dn: cn=KP-tpc-01,OU=kafka,OU=AccountGroupNotInRemedy,OU=Groups,OU=NAV,OU=BusinessUnits,DC=test,DC=local
objectClass: group
cn: KP-tpc-01
sAMAccountName: KP-tpc-01
description: Generated by kafka-admin-rest, see https://github.com/navikt/kafka-adminrest

dn: cn=KM-tpc-01,OU=kafka,OU=AccountGroupNotInRemedy,OU=Groups,OU=NAV,OU=BusinessUnits,DC=test,DC=local
objectClass: group
cn: KM-tpc-01
sAMAccountName: KM-tpc-01
description: Generated by kafka-admin-rest, see https://github.com/navikt/kafka-adminrest
member: uid=n000002,ou=Users,ou=NAV,ou=BusinessUnits,dc=test,dc=local

dn: cn=KC-tpc-02,OU=kafka,OU=AccountGroupNotInRemedy,OU=Groups,OU=NAV,OU=BusinessUnits,DC=test,DC=local
objectClass: group
cn: KC-tpc-02
sAMAccountName: KC-tpc-02
description: Generated by kafka-admin-rest, see https://github.com/navikt/kafka-adminrest
member: uid=srvc02,ou=ApplAccounts,ou=ServiceAccounts,dc=test,dc=local

dn: cn=KP-tpc-02,OU=kafka,OU=AccountGroupNotInRemedy,OU=Groups,OU=NAV,OU=BusinessUnits,DC=test,DC=local
objectClass: group
cn: KP-tpc-02
sAMAccountName: KP-tpc-02
description: Generated by kafka-admin-rest, see https://github.com/navikt/kafka-adminrest
member: uid=srvp01,ou=ServiceAccounts,dc=test,dc=local

dn: cn=KM-tpc-02,OU=kafka,OU=AccountGroupNotInRemedy,OU=Groups,OU=NAV,OU=BusinessUnits,DC=test,DC=local
objectClass: group
cn: KM-tpc-02
sAMAccountName: KM-tpc-02
description: Generated by kafka-admin-rest, see https://github.com/navikt/kafka-adminrest

dn: cn=KC-tpc-03,OU=kafka,OU=AccountGroupNotInRemedy,OU=Groups,OU=NAV,OU=BusinessUnits,DC=test,DC=local
objectClass: group
cn: KC-tpc-03
sAMAccountName: KC-tpc-03
description: Generated by kafka-admin-rest, see https://github.com/navikt/kafka-adminrest
member: uid=srvc01,ou=ServiceAccounts,dc=test,dc=local

dn: cn=KP-tpc-03,OU=kafka,OU=AccountGroupNotInRemedy,OU=Groups,OU=NAV,OU=BusinessUnits,DC=test,DC=local
objectClass: group
cn: KP-tpc-03
sAMAccountName: KP-tpc-03
description: Generated by kafka-admin-rest, see https://github.com/navikt/kafka-adminrest
member: uid=srvp02,ou=ApplAccounts,ou=ServiceAccounts,dc=test,dc=local

dn: cn=KM-tpc-03,OU=kafka,OU=AccountGroupNotInRemedy,OU=Groups,OU=NAV,OU=BusinessUnits,DC=test,DC=local
objectClass: group
cn: KM-tpc-03
sAMAccountName: KM-tpc-03
description: Generated by kafka-admin-rest, see https://github.com/navikt/kafka-adminrest
member: uid=n145821,ou=Users,ou=NAV,ou=BusinessUnits,dc=test,dc=local
